1) Download the Raspbian Stretch Lite image (1.9Gb) from https://www.raspberrypi.org/downloads/raspbian/
2) If not already installed, install Etcher, cf https://www.balena.io/etcher/
3) Launch Etcher
4) Plug the 8Gb microSD card (should be class 10 or higher for best results)
5) Select the downloaded image
6) Select the microSD card
7) Flash!
8) Create an empy file named "ssh" on the boot drive of the miccroSD card
9-1) If Raspberry Pi 3B, Edit the file /boot/config.txt with the following content to overclock at 1.35GHz
arm_freq=1350
core_freq=500
over_voltage=4
disable_splash=1
9-2) If Raspberry Pi 3B+,
10) Insert the microSD into the Raspberry Pi
11) Connect the Raspberry Pi to the network (should use a lan cable of class 7 or more for best results)
12) Turn on the Raspberry Pi
13) Get the IP adress of the local computer with ifconfig, lets say its a.b.c.d
14) Scan the devices on the local network with the command `nmap -sP a.b.c.0/24`
15) Connect to the Raspberry Pi through ssh with the command `ssh pi@ip.addr.goes.here`, default password is raspberry
16) Setup the Raspberry Pi with `sudo raspi-config`
17) Change the password, locale and timezone, expand the file system, and exit
18) Set the hostname with the following commands
sudo hostname Squidlet001  # whatever name you chose
sudo nano /etc/hostname    # change the hostname here too
sudo nano /etc/hosts       # change "raspberrypi" to "Squidlet001"
19) Ensure the system time is right with the command `sudo apt install ntpdate -y`
20) Reboot with the command `sudo reboot`
21) Check the info about the CPUs and memory Raspberry Pi with the commands `cat /proc/cpuinfo`, `cat /proc/meminfo` and `vcgencmd measure_clock arm`. More usefull commands: `watch -n 1 cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq`, `while true; do /opt/vc/bin/vcgencmd measure_temp && sleep 1; done`, `lscpu`
22) Check the temperature of the Raspberry Pi with the command `vcgencmd measure_temp`, should be kept under around 70 degrees celsius (official limit is 85)
23) Cf https://www.maketecheasier.com/finding-raspberry-pi-system-information/ for more information
24) Make a directory to clone the git repositories with the command `mkdir ~/GitHub`
25) Move to the ~/GitHub directory
26) Clone the repository PBMake with the command `git clone https://github.com/BayashiPascal/PBMake.git`
27) Edit the root Makefile with the command `nano ~/GitHub/PBMake/Makefile.inc` and change the value of ROOT_DIR with /home/pi/GitHub/ and the value of BUILD_ARCH with 2
28) Clone the repository TheSquid with the command `git clone https://github.com/BayashiPascal/TheSquid.git`
29) Move to the ~/GitHub/TheSquid directory
30) Open the Makefile with the command `nano Makefile` and make sure the BUILD_MODE is set to '1'
31) Compile the repository with the command `make`, others repository are automatically installed
32) Check everything works fine with `./main`.

Mount of NAS
1) sudo mkdir /mnt/NAS
2) sudo nano /etc/fstab
//<IP_TO_NAS>/TheSquid /mnt/NAS cifs user,uid=1000,rw,suid,credentials=/etc/credentials 0 0
3) sudo nano /etc/credentials
username=squidlet
password=mypassword
4) sudo apt-get -y install cifs-utils

Installing POV-Ray
1) sudo apt-get -y update
2) sudo apt-get -y install libboost-all-dev
3) sudo apt-get -y install zlib1g-dev
4) sudo apt-get -y install libpng-dev
5) sudo apt-get -y install libjpeg8-dev
6) sudo apt-get -y install libopenexr-dev
7) sudo apt-get -y install libtiff5-dev libtiff5 libjbig-dev
8) sudo apt-get -y install autoconf
9) cd ~/GitHub
10) git clone https://github.com/POV-Ray/povray.git
11) cd ~/GitHub/povray/unix/
12) git checkout 3.7-stable
13) ./prebuild.sh
14) cd ../
15) ./configure COMPILED_BY="TheSquid <email@address>" --with-boost-libdir=/usr/lib/arm-linux-gnueabihf
16) make
17) sudo make install
18) make check

